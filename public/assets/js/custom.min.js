async function fetchPostJSON(e,t=!1){const n=t?"application/json":'application/x-www-form-urlencoded; charset="utf-8"';let s;return s=await fetch("/",{method:"POST",headers:{"Content-Type":n,Accept:"application/json"},body:t?JSON.stringify(e):e}).then((e=>e.json())).then((e=>{if(e.error)throw e;return e})).catch((e=>{console.error(e.error),e.data&&console.debug(e.data)})),s}class PopCarteTest{inputTimer;constructor(){this.init()}init(){const e=document.getElementById("form"),t=document.getElementById("city"),n=document.getElementById("message"),s=document.getElementById("name"),i=document.getElementById("logo"),d=document.getElementById("recto"),c=document.getElementById("verso"),a=document.getElementById("hamburger"),o=document.getElementById("submit");"/"===window.location.pathname||e.classList.contains("flipped-left")||window.history.replaceState(null,null,"/"),a.addEventListener("click",(()=>this.toggleMenu())),s.addEventListener("input",(()=>this.checkForm())),n.addEventListener("input",(()=>this.checkForm())),t.addEventListener("input",(e=>this.cityTimer(e))),i.addEventListener("click",(()=>{"/"!==window.location.pathname&&history.back()})),d.addEventListener("click",(()=>this.cardFlip(d,c))),c.addEventListener("click",(()=>this.cardFlip(d,c)));new ResizeObserver(this.updateFontSize).observe(c),o.addEventListener("click",(()=>this.registerCard())),window.addEventListener("popstate",(e=>{null===e.state?this.displayForm():this.displayCard()})),console.log("PopCarteTest energized !")}addCityPrediction(e){const t=Array.from(document.querySelectorAll("#predictions li"));if(t.length>3||void 0!==t.find((t=>t.textContent===e)))return;const n=document.createElement("li");n.value=e,n.textContent=e,document.getElementById("predictions").appendChild(n),n.addEventListener("click",(e=>{this.selectCity(e.target)}))}cardFlip(e,t){e.classList.contains("flipped-left")?(e.classList.remove("flipped-left"),t.classList.add("flipped-right")):(e.classList.add("flipped-left"),t.classList.remove("flipped-right"))}checkCity(){const e=document.getElementById("city");void 0!==Array.from(document.querySelectorAll("#predictions li")).find((t=>t.textContent===e.value))?(e.classList.add("valid"),this.hidePredictions()):e.classList.remove("valid"),this.checkForm()}checkForm(){const e=document.getElementById("city"),t=document.getElementById("message"),n=document.getElementById("name"),s=document.getElementById("submit");e.classList.contains("valid")&&t.value.length>0&&n.value.length>0?s.classList.add("enabled"):s.classList.remove("enabled")}async cityTimer(e){clearTimeout(this.inputTimer),this.inputTimer=setTimeout((()=>{this.getCitySuggestions(e)}),500)}displayCard(){const e=document.getElementById("form"),t=document.getElementById("recto"),n=(document.getElementById("verso"),document.querySelector(".content")),s=document.getElementById("title-editor"),i=document.getElementById("title-card");n.classList.add("card"),e.classList.add("flipped-left"),t.classList.remove("flipped-right"),s.classList.add("flipped-left"),i.classList.remove("flipped-right")}displayForm(){const e=document.getElementById("form"),t=document.getElementById("recto"),n=document.getElementById("verso"),s=document.querySelector(".content"),i=document.getElementById("title-editor"),d=document.getElementById("title-card");this.formReset(),s.classList.remove("card"),n.classList.contains("flipped-right")?t.classList.add("flipped-right"):(t.style.display="none",t.classList.remove("flipped-left"),t.classList.add("flipped-right"),setTimeout((()=>{t.style.display=""}),500),n.classList.add("flipped-right")),e.classList.remove("flipped-left"),i.classList.remove("flipped-left"),d.classList.add("flipped-right")}formReset(){const e=document.getElementById("city");[document.getElementById("name"),e,document.getElementById("message")].map((e=>{e.value=""})),e.classList.remove("valid")}async getCitySuggestions(e){e.target.value=e.target.value.charAt(0).toUpperCase()+e.target.value.slice(1);if(document.getElementById("predictions").innerHTML="",e.target.value.length<3)return[];const t=`task=city&city=${e.target.value}`;let n=await fetchPostJSON(t);if(!n.predictions.length)return[];n.predictions.map((e=>{this.addCityPrediction(e.structured_formatting.main_text)})),this.showPredictions(),this.checkCity()}async getCityTemperature(e){const t=`task=weather&city=${e}`;return await fetchPostJSON(t)}hidePredictions(){document.getElementById("predictions").classList.remove("show")}async registerCard(){if(!document.getElementById("submit").classList.contains("enabled"))return;const e={city:document.getElementById("city").value,message:document.getElementById("message").value,name:document.getElementById("name").value,task:"register"};let t=await fetchPostJSON(e,!0);"number"!=typeof t&&console.error("Erreur serveur : vérifiez l'existance de la table dans la base de données et la bonne connexion au serveur.");const n=`carte-${t}`,s=document.getElementById("title-card"),i=document.getElementById("verso-message"),d=document.getElementById("verso-end-message"),c=d.getElementsByTagName("strong")[0],a=d.getElementsByTagName("strong")[1];s.textContent=`Carte écrite par ${e.name}`,i.textContent=e.message,c.textContent=e.city;let o=await this.getCityTemperature(e.city);a.textContent=`${o}°C`,this.displayCard(),history.pushState({path:n},"",n)}selectCity(e){document.getElementById("city").value=e.textContent,this.checkCity()}showPredictions(){document.getElementById("predictions").classList.add("show")}toggleMenu(){document.getElementsByTagName("nav")[0].classList.toggle("active")}updateFontSize(e){const t=.03*e[0].contentRect.width;e[0].target.style.fontSize=`${t}px`}}new PopCarteTest;